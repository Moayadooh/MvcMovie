pipeline {
  agent any

  environment {
    REGISTRY = "localhost:5006"
    WEB_APP_IMAGE_NAME = "web-app"
    WEB_APP_CONTAINER_NAME = "web-app"
    API_APP_IMAGE_NAME = "api-app"
    API_APP_CONTAINER_NAME = "api-app"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Docker Image') {
      steps {
        sh '''
          docker build -t $REGISTRY/$API_APP_IMAGE_NAME:latest /crud-api
          docker build -t $REGISTRY/$WEB_APP_IMAGE_NAME:latest .
        '''
      }
    }

    stage('Push to Local Registry') {
      steps {
        sh '''
          docker push $REGISTRY/$API_APP_IMAGE_NAME:latest
          docker push $REGISTRY/$WEB_APP_IMAGE_NAME:latest
        '''
      }
    }

    stage('Deploy Container') {
      steps {
        sh '''
          # Dynamically find the Docker network name
          NETWORK_NAME=$(docker network ls --format "{{.Name}}" | grep internal-network | head -n 1)

          echo "Using network: $NETWORK_NAME"
          
          # Stop and remove any old containers
          docker rm -f $API_APP_CONTAINER_NAME || true
          docker rm -f $WEB_APP_CONTAINER_NAME || true

          # Run the new containers
          docker run -d --name $API_APP_CONTAINER_NAME --network $NETWORK_NAME -p 5005:5005 $REGISTRY/$API_APP_IMAGE_NAME:latest
          docker run -d --name $WEB_APP_CONTAINER_NAME --network $NETWORK_NAME -p 5005:5005 $REGISTRY/$WEB_APP_IMAGE_NAME:latest
        '''
      }
    }
  }
}
